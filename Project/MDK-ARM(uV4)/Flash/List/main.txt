; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\User\CpuFlash -I..\..\User\CRC8_16 -I..\..\User\DS1302 -I..\..\User\DWT -I..\..\User\IIC -I..\..\User\IWDG -I..\..\User\Key -I..\..\User\Led -I..\..\User\Net -I..\..\User\Protocal -I..\..\User\Reader -I..\..\User\SPI -I..\..\User\Timer -I..\..\User\Uart -I..\..\User\Param -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.AppObjCreate||, CODE, READONLY, ALIGN=2

                  AppObjCreate PROC
;;;267    */
;;;268    static void AppObjCreate (void)
000000  2130              MOVS     r1,#0x30
;;;269    {
;;;270    	/* 创建消息邮箱 */
;;;271    	os_mbx_init(&mailboxCardRX, sizeof(mailboxCardRX));
000002  480a              LDR      r0,|L1.44|
000004  f8dfc028          LDR      r12,|L1.48|
000008  df00              SVC      #0x0
;;;272        
;;;273        os_mbx_init(&mailboxCardFirst, sizeof(mailboxCardFirst));
00000a  2130              MOVS     r1,#0x30
00000c  4809              LDR      r0,|L1.52|
00000e  f8dfc020          LDR      r12,|L1.48|
000012  df00              SVC      #0x0
;;;274        os_mbx_init(&mailboxCardMulti, sizeof(mailboxCardMulti));
000014  2130              MOVS     r1,#0x30
000016  4808              LDR      r0,|L1.56|
000018  f8dfc014          LDR      r12,|L1.48|
00001c  df00              SVC      #0x0
;;;275        os_mbx_init(&mailboxCardInterLock, sizeof(mailboxCardInterLock));
00001e  2130              MOVS     r1,#0x30
000020  4806              LDR      r0,|L1.60|
000022  f8dfc00c          LDR      r12,|L1.48|
000026  df00              SVC      #0x0
;;;276    }
000028  4770              BX       lr
;;;277    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      mailboxCardRX
                  |L1.48|
                          DCD      rt_mbx_init
                  |L1.52|
                          DCD      mailboxCardFirst
                  |L1.56|
                          DCD      mailboxCardMulti
                  |L1.60|
                          DCD      mailboxCardInterLock

                          AREA ||i.AppTaskButton||, CODE, READONLY, ALIGN=1

                  AppTaskButton PROC
;;;151    */
;;;152    __task void AppTaskButton(void)
000000  bf00              NOP      
                  |L2.2|
;;;153    {
;;;154    
;;;155        while(1)
000002  e7fe              B        |L2.2|
;;;156        {
;;;157            
;;;158        }//end of while
;;;159    }
;;;160    
                          ENDP


                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;221    */
;;;222    static void AppTaskCreate (void)
000000  2300              MOVS     r3,#0
;;;223    {
;;;224        HandleTaskReader = os_tsk_create_user(AppTaskKey,              /* 任务函数 */ 
000002  4a22              LDR      r2,|L3.140|
000004  4922              LDR      r1,|L3.144|
000006  4823              LDR      r0,|L3.148|
000008  f8dfc08c          LDR      r12,|L3.152|
00000c  df00              SVC      #0x0
00000e  4923              LDR      r1,|L3.156|
000010  6008              STR      r0,[r1,#0]  ; HandleTaskReader
;;;225                                           1,                       /* 任务优先级 */ 
;;;226                                           &AppTaskKeyStk,          /* 任务栈 */
;;;227                                           sizeof(AppTaskKeyStk));  /* 任务栈大小，单位字节数 */
;;;228        
;;;229        HandleTaskReader = os_tsk_create_user(AppTaskReader,              /* 任务函数 */ 
000012  2300              MOVS     r3,#0
000014  4a22              LDR      r2,|L3.160|
000016  491e              LDR      r1,|L3.144|
000018  1d49              ADDS     r1,r1,#5
00001a  4822              LDR      r0,|L3.164|
00001c  f8dfc078          LDR      r12,|L3.152|
000020  df00              SVC      #0x0
000022  491e              LDR      r1,|L3.156|
000024  6008              STR      r0,[r1,#0]  ; HandleTaskReader
;;;230                                           6,                       /* 任务优先级 */ 
;;;231                                           &AppTaskReaderStk,          /* 任务栈 */
;;;232                                           sizeof(AppTaskReaderStk));  /* 任务栈大小，单位字节数 */
;;;233        
;;;234        HandleTaskFirst = os_tsk_create_user(AppTaskFirst,              /* 任务函数 */ 
000026  2300              MOVS     r3,#0
000028  4a1f              LDR      r2,|L3.168|
00002a  f04f1102          MOV      r1,#0x20002
00002e  481f              LDR      r0,|L3.172|
000030  f8dfc064          LDR      r12,|L3.152|
000034  df00              SVC      #0x0
000036  491e              LDR      r1,|L3.176|
000038  6008              STR      r0,[r1,#0]  ; HandleTaskFirst
;;;235                                           2,                       /* 任务优先级 */ 
;;;236                                           &AppTaskFirstStk,          /* 任务栈 */
;;;237                                           sizeof(AppTaskFirstStk));  /* 任务栈大小，单位字节数 */
;;;238        
;;;239        HandleTaskMulti = os_tsk_create_user(AppTaskMulti,              /* 任务函数 */ 
00003a  2300              MOVS     r3,#0
00003c  4a1d              LDR      r2,|L3.180|
00003e  4914              LDR      r1,|L3.144|
000040  1d09              ADDS     r1,r1,#4
000042  481d              LDR      r0,|L3.184|
000044  f8dfc050          LDR      r12,|L3.152|
000048  df00              SVC      #0x0
00004a  491c              LDR      r1,|L3.188|
00004c  6008              STR      r0,[r1,#0]  ; HandleTaskMulti
;;;240    	                                   5,                       /* 任务优先级 */ 
;;;241    	                                   &AppTaskMultiStk,          /* 任务栈 */
;;;242    	                                   sizeof(AppTaskMultiStk));  /* 任务栈大小，单位字节数 */
;;;243        
;;;244    	HandleTaskInterLock = os_tsk_create_user(AppTaskInterLock,              /* 任务函数 */ 
00004e  2300              MOVS     r3,#0
000050  4a1b              LDR      r2,|L3.192|
000052  490f              LDR      r1,|L3.144|
000054  1cc9              ADDS     r1,r1,#3
000056  481b              LDR      r0,|L3.196|
000058  f8dfc03c          LDR      r12,|L3.152|
00005c  df00              SVC      #0x0
00005e  491a              LDR      r1,|L3.200|
000060  6008              STR      r0,[r1,#0]  ; HandleTaskInterLock
;;;245    	                                   4,                       /* 任务优先级 */ 
;;;246    	                                   &AppTaskInterLockStk,          /* 任务栈 */
;;;247    	                                   sizeof(AppTaskInterLockStk));  /* 任务栈大小，单位字节数 */
;;;248        
;;;249        HandleTaskButton = os_tsk_create_user(AppTaskButton,              /* 任务函数 */ 
000062  2300              MOVS     r3,#0
000064  4a19              LDR      r2,|L3.204|
000066  490a              LDR      r1,|L3.144|
000068  1c89              ADDS     r1,r1,#2
00006a  4819              LDR      r0,|L3.208|
00006c  f8dfc028          LDR      r12,|L3.152|
000070  df00              SVC      #0x0
000072  4918              LDR      r1,|L3.212|
000074  6008              STR      r0,[r1,#0]  ; HandleTaskButton
;;;250    	                                   3,                       /* 任务优先级 */ 
;;;251    	                                   &AppTaskButtonStk,          /* 任务栈 */
;;;252    	                                   sizeof(AppTaskButtonStk));  /* 任务栈大小，单位字节数 */
;;;253        
;;;254    	HandleTaskNet = os_tsk_create_user(AppTaskNet,              /* 任务函数 */ 
000076  2300              MOVS     r3,#0
000078  4a17              LDR      r2,|L3.216|
00007a  4905              LDR      r1,|L3.144|
00007c  1d89              ADDS     r1,r1,#6
00007e  4817              LDR      r0,|L3.220|
000080  f8dfc014          LDR      r12,|L3.152|
000084  df00              SVC      #0x0
000086  4916              LDR      r1,|L3.224|
000088  6008              STR      r0,[r1,#0]  ; HandleTaskNet
;;;255    	                                   7,                       /* 任务优先级 */ 
;;;256    	                                   &AppTaskNetStk,          /* 任务栈 */
;;;257    	                                   sizeof(AppTaskNetStk));  /* 任务栈大小，单位字节数 */
;;;258    }
00008a  4770              BX       lr
;;;259    
                          ENDP

                  |L3.140|
                          DCD      AppTaskKeyStk
                  |L3.144|
                          DCD      0x00020001
                  |L3.148|
                          DCD      AppTaskKey
                  |L3.152|
                          DCD      rt_tsk_create
                  |L3.156|
                          DCD      HandleTaskReader
                  |L3.160|
                          DCD      AppTaskReaderStk
                  |L3.164|
                          DCD      AppTaskReader
                  |L3.168|
                          DCD      AppTaskFirstStk
                  |L3.172|
                          DCD      AppTaskFirst
                  |L3.176|
                          DCD      HandleTaskFirst
                  |L3.180|
                          DCD      AppTaskMultiStk
                  |L3.184|
                          DCD      AppTaskMulti
                  |L3.188|
                          DCD      HandleTaskMulti
                  |L3.192|
                          DCD      AppTaskInterLockStk
                  |L3.196|
                          DCD      AppTaskInterLock
                  |L3.200|
                          DCD      HandleTaskInterLock
                  |L3.204|
                          DCD      AppTaskButtonStk
                  |L3.208|
                          DCD      AppTaskButton
                  |L3.212|
                          DCD      HandleTaskButton
                  |L3.216|
                          DCD      AppTaskNetStk
                  |L3.220|
                          DCD      AppTaskNet
                  |L3.224|
                          DCD      HandleTaskNet

                          AREA ||i.AppTaskFirst||, CODE, READONLY, ALIGN=2

                  AppTaskFirst PROC
;;;112    //处理首卡的任务
;;;113    __task void AppTaskFirst(void)
000000  bf00              NOP      
;;;114    {
;;;115    
;;;116        const uint16_t usMaxBlockTime = 100; /* 延迟周期 */
;;;117        while(1)
000002  e003              B        |L4.12|
                  |L4.4|
;;;118        {
;;;119               
;;;120            os_dly_wait(usMaxBlockTime);
000004  2064              MOVS     r0,#0x64
000006  f8dfc008          LDR      r12,|L4.16|
00000a  df00              SVC      #0x0
                  |L4.12|
00000c  e7fa              B        |L4.4|
;;;121        }//end of while
;;;122    }
;;;123    
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      rt_dly_wait

                          AREA ||i.AppTaskInterLock||, CODE, READONLY, ALIGN=2

                  AppTaskInterLock PROC
;;;136    //处理互锁的任务
;;;137    __task void AppTaskInterLock(void)
000000  bf00              NOP      
;;;138    {  
;;;139        const uint16_t usMaxBlockTime = 100; /* 延迟周期 */
;;;140        while(1)
000002  e003              B        |L5.12|
                  |L5.4|
;;;141        {
;;;142            os_dly_wait(usMaxBlockTime);
000004  2064              MOVS     r0,#0x64
000006  f8dfc008          LDR      r12,|L5.16|
00000a  df00              SVC      #0x0
                  |L5.12|
00000c  e7fa              B        |L5.4|
;;;143        }//end of while
;;;144    }
;;;145    
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      rt_dly_wait

                          AREA ||i.AppTaskKey||, CODE, READONLY, ALIGN=2

                  AppTaskKey PROC
;;;161    //按键和反馈的扫描任务
;;;162    __task void AppTaskKey(void)
000000  e003              B        |L6.10|
                  |L6.2|
;;;163    {
;;;164        while(1)
;;;165        {     
;;;166            
;;;167            os_dly_wait(100);
000002  2064              MOVS     r0,#0x64
000004  f8dfc004          LDR      r12,|L6.12|
000008  df00              SVC      #0x0
                  |L6.10|
00000a  e7fa              B        |L6.2|
;;;168            
;;;169        }//end of while
;;;170               
;;;171    }
;;;172    
                          ENDP

                  |L6.12|
                          DCD      rt_dly_wait

                          AREA ||i.AppTaskMulti||, CODE, READONLY, ALIGN=2

                  AppTaskMulti PROC
;;;124    //处理多重卡的任务
;;;125    __task void AppTaskMulti(void)
000000  bf00              NOP      
;;;126    {
;;;127    
;;;128        const uint16_t usMaxBlockTime = 100; /* 延迟周期 */
;;;129        while(1)
000002  e003              B        |L7.12|
                  |L7.4|
;;;130        {
;;;131            os_dly_wait(usMaxBlockTime);
000004  2064              MOVS     r0,#0x64
000006  f8dfc008          LDR      r12,|L7.16|
00000a  df00              SVC      #0x0
                  |L7.12|
00000c  e7fa              B        |L7.4|
;;;132        }//end of while
;;;133    }
;;;134    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      rt_dly_wait

                          AREA ||i.AppTaskNet||, CODE, READONLY, ALIGN=2

                  AppTaskNet PROC
;;;178    */
;;;179    __task void AppTaskNet(void)
000000  e003              B        |L8.10|
                  |L8.2|
;;;180    {
;;;181        while(1)
;;;182        {    
;;;183            
;;;184            /* os_itv_wait是周期性延迟，os_dly_wait是相对延迟。*/
;;;185    		os_dly_wait(100);
000002  2064              MOVS     r0,#0x64
000004  f8dfc004          LDR      r12,|L8.12|
000008  df00              SVC      #0x0
                  |L8.10|
00000a  e7fa              B        |L8.2|
;;;186        }//end of while
;;;187    }
;;;188    
                          ENDP

                  |L8.12|
                          DCD      rt_dly_wait

                          AREA ||i.AppTaskReader||, CODE, READONLY, ALIGN=2

                  AppTaskReader PROC
;;;102    */
;;;103    __task void AppTaskReader(void)
000000  bf00              NOP      
;;;104    {
;;;105        const uint16_t usMaxBlockTime = 100; /* 延迟周期 */
;;;106        while(1)
000002  e003              B        |L9.12|
                  |L9.4|
;;;107        {
;;;108            os_dly_wait(usMaxBlockTime);
000004  2064              MOVS     r0,#0x64
000006  f8dfc008          LDR      r12,|L9.16|
00000a  df00              SVC      #0x0
                  |L9.12|
00000c  e7fa              B        |L9.4|
;;;109        }//end of while
;;;110    }
;;;111    
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      rt_dly_wait

                          AREA ||i.AppTaskStart||, CODE, READONLY, ALIGN=2

                  AppTaskStart PROC
;;;195    
;;;196    __task void AppTaskStart(void)
000000  f8dfc020          LDR      r12,|L10.36|
;;;197    {
;;;198        
;;;199        /* 获取启动任务的句柄 */
;;;200    	HandleTaskStart = os_tsk_self();
000004  df00              SVC      #0x0
000006  4908              LDR      r1,|L10.40|
000008  6008              STR      r0,[r1,#0]  ; HandleTaskStart
;;;201        //通过start任务间接地创建其他任务
;;;202    	AppTaskCreate();
00000a  f7fffffe          BL       AppTaskCreate
;;;203        /* 创建任务通信机制 */
;;;204    	AppObjCreate();
00000e  f7fffffe          BL       AppObjCreate
;;;205    	
;;;206        while(1)
000012  e006              B        |L10.34|
                  |L10.20|
;;;207        {
;;;208            IWDG_Feed();//喂狗
000014  f7fffffe          BL       IWDG_Feed
;;;209            
;;;210            os_dly_wait(15000);
000018  f6432098          MOV      r0,#0x3a98
00001c  f8dfc00c          LDR      r12,|L10.44|
000020  df00              SVC      #0x0
                  |L10.34|
000022  e7f7              B        |L10.20|
;;;211        }
;;;212    }
;;;213    
                          ENDP

                  |L10.36|
                          DCD      rt_tsk_self
                  |L10.40|
                          DCD      HandleTaskStart
                  |L10.44|
                          DCD      rt_dly_wait

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;82     */
;;;83     int main(void) 
000000  f7fffffe          BL       bsp_Init
;;;84     {	
;;;85     	/* 初始化外设 */
;;;86     	bsp_Init();
;;;87         
;;;88     	/* 创建启动任务 */
;;;89      	os_sys_init_user(AppTaskStart,             /* 任务函数 */
000004  f7fffffe          BL       os_set_env
000008  4a03              LDR      r2,|L11.24|
00000a  4904              LDR      r1,|L11.28|
00000c  4804              LDR      r0,|L11.32|
00000e  f8dfc014          LDR      r12,|L11.36|
000012  df00              SVC      #0x0
;;;90     	                  8,                        /* 任务优先级 */
;;;91     	                  &AppTaskStartStk,         /* 任务栈 */
;;;92     	                  sizeof(AppTaskStartStk)); /* 任务栈大小，单位字节数 */
;;;93     	while(1);
000014  bf00              NOP      
                  |L11.22|
000016  e7fe              B        |L11.22|
;;;94     }
;;;95     
                          ENDP

                  |L11.24|
                          DCD      AppTaskStartStk
                  |L11.28|
                          DCD      0x00020008
                  |L11.32|
                          DCD      AppTaskStart
                  |L11.36|
                          DCD      rt_sys_init

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  AppTaskReaderStk
                          %        512
                  AppTaskFirstStk
                          %        512
                  AppTaskMultiStk
                          %        512
                  AppTaskInterLockStk
                          %        512
                  AppTaskKeyStk
                          %        512
                  AppTaskButtonStk
                          %        512
                  AppTaskNetStk
                          %        512
                  AppTaskStartStk
                          %        512
                  mailboxCardRX
                          %        48
                  mailboxCardFirst
                          %        48
                  mailboxCardMulti
                          %        48
                  mailboxCardInterLock
                          %        48

                          AREA ||.data||, DATA, ALIGN=2

                  HandleTaskReader
                          DCD      0x00000000
                  HandleTaskFirst
                          DCD      0x00000000
                  HandleTaskMulti
                          DCD      0x00000000
                  HandleTaskInterLock
                          DCD      0x00000000
                  HandleTaskKey
                          DCD      0x00000000
                  HandleTaskButton
                          DCD      0x00000000
                  HandleTaskNet
                          DCD      0x00000000
                  HandleTaskStart
                          DCD      0x00000000
                  OneTimerA
                          DCD      0x00000000
                  OneTimerB
                          DCD      0x00000000
                  FB_data
000028  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_e51cdd69____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_e51cdd69____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_e51cdd69____REVSH|
#line 128
|__asm___6_main_c_e51cdd69____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
