; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\User\CpuFlash -I..\..\User\CRC8_16 -I..\..\User\DS1302 -I..\..\User\DWT -I..\..\User\IIC -I..\..\User\IWDG -I..\..\User\Key -I..\..\User\Led -I..\..\User\Net -I..\..\User\Protocal -I..\..\User\Reader -I..\..\User\SPI -I..\..\User\Timer -I..\..\User\Uart -I..\..\User\Param -I..\..\User\ADC -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;126    */
;;;127    static void AppTaskCreate (void)
000000  2300              MOVS     r3,#0
;;;128    { 
;;;129    	HandleTaskNet = os_tsk_create_user(AppTaskNet,              /* 任务函数 */ 
000002  4a04              LDR      r2,|L1.20|
000004  4904              LDR      r1,|L1.24|
000006  4805              LDR      r0,|L1.28|
000008  f8dfc014          LDR      r12,|L1.32|
00000c  df00              SVC      #0x0
00000e  4905              LDR      r1,|L1.36|
000010  6008              STR      r0,[r1,#0]  ; HandleTaskNet
;;;130    	                                   3,                       /* 任务优先级 */ 
;;;131    	                                   &AppTaskNetStk,          /* 任务栈 */
;;;132    	                                   sizeof(AppTaskNetStk));  /* 任务栈大小，单位字节数 */
;;;133    }
000012  4770              BX       lr
;;;134    
                          ENDP

                  |L1.20|
                          DCD      AppTaskNetStk
                  |L1.24|
                          DCD      0x00020003
                  |L1.28|
                          DCD      AppTaskNet
                  |L1.32|
                          DCD      rt_tsk_create
                  |L1.36|
                          DCD      HandleTaskNet

                          AREA ||i.AppTaskNet||, CODE, READONLY, ALIGN=2

                  AppTaskNet PROC
;;;88     */
;;;89     __task void AppTaskNet(void)
000000  bf00              NOP      
;;;90     {
;;;91         uint16_t ret_flags;
;;;92         const uint16_t usMaxBlockTime = 0x0FFF; /* 延迟周期,4095ms */
;;;93         while(1)
000002  e01c              B        |L2.62|
                  |L2.4|
;;;94         {
;;;95             //采用或等待方式;退出前bit位被清除
;;;96             if(os_evt_wait_or(BIT_ALL, usMaxBlockTime) == OS_R_EVT)
000004  2200              MOVS     r2,#0
000006  f64071ff          MOV      r1,#0xfff
00000a  20ff              MOVS     r0,#0xff
00000c  f8dfc030          LDR      r12,|L2.64|
000010  df00              SVC      #0x0
000012  2802              CMP      r0,#2
000014  d10d              BNE      |L2.50|
;;;97             {
;;;98                 ret_flags = os_evt_get();//返回值为对应的bit
000016  f8dfc02c          LDR      r12,|L2.68|
00001a  df00              SVC      #0x0
00001c  4604              MOV      r4,r0
;;;99                 
;;;100                switch(ret_flags)
00001e  2c01              CMP      r4,#1
000020  d105              BNE      |L2.46|
;;;101                {
;;;102                    case LORA_RECV_BIT://接收到服务端命令                 
;;;103                        processCommand(g_tLora.buf, g_tLora.len);
000022  4809              LDR      r0,|L2.72|
000024  7801              LDRB     r1,[r0,#0]  ; g_tLora
000026  1c40              ADDS     r0,r0,#1
000028  f7fffffe          BL       processCommand
;;;104                        break; 
00002c  e000              B        |L2.48|
                  |L2.46|
;;;105                    
;;;106                    default:
;;;107                        break;
00002e  bf00              NOP      
                  |L2.48|
000030  bf00              NOP                            ;104
                  |L2.50|
;;;108                }//end of switch
;;;109                
;;;110            }//end of if
;;;111            
;;;112            //判断标志位超时后执行的操作
;;;113            //向看门狗任务发送事件标志位
;;;114            os_evt_set(TASK_NET_BIT, HandleTaskStart);//post
000032  4806              LDR      r0,|L2.76|
000034  6801              LDR      r1,[r0,#0]  ; HandleTaskStart
000036  2002              MOVS     r0,#2
000038  f8dfc014          LDR      r12,|L2.80|
00003c  df00              SVC      #0x0
                  |L2.62|
00003e  e7e1              B        |L2.4|
;;;115        }
;;;116        
;;;117    }
;;;118    
                          ENDP

                  |L2.64|
                          DCD      rt_evt_wait
                  |L2.68|
                          DCD      rt_evt_get
                  |L2.72|
                          DCD      g_tLora
                  |L2.76|
                          DCD      HandleTaskStart
                  |L2.80|
                          DCD      rt_evt_set

                          AREA ||i.AppTaskStart||, CODE, READONLY, ALIGN=2

                  AppTaskStart PROC
;;;53     
;;;54     __task void AppTaskStart(void)
000000  f8dfc038          LDR      r12,|L3.60|
;;;55     {  
;;;56         uint16_t ret_flags;
;;;57         /* 获取启动任务的句柄 */
;;;58     	HandleTaskStart = os_tsk_self();
000004  df00              SVC      #0x0
000006  490e              LDR      r1,|L3.64|
000008  6008              STR      r0,[r1,#0]  ; HandleTaskStart
;;;59         //通过start任务间接地创建其他任务
;;;60     	AppTaskCreate();
00000a  f7fffffe          BL       AppTaskCreate
;;;61     	
;;;62         while(1)
00000e  e013              B        |L3.56|
                  |L3.16|
;;;63         {        
;;;64             //采用或等待方式;退出前bit位被清除
;;;65             if(os_evt_wait_or(BIT_ALL, 0xFFFF) == OS_R_EVT)
000010  2200              MOVS     r2,#0
000012  f64f71ff          MOV      r1,#0xffff
000016  20ff              MOVS     r0,#0xff
000018  f8dfc028          LDR      r12,|L3.68|
00001c  df00              SVC      #0x0
00001e  2802              CMP      r0,#2
000020  d10a              BNE      |L3.56|
;;;66             {
;;;67                 ret_flags = os_evt_get();//返回值为对应的bit
000022  f8dfc024          LDR      r12,|L3.72|
000026  df00              SVC      #0x0
000028  4604              MOV      r4,r0
;;;68                 
;;;69                 switch(ret_flags)
00002a  2c02              CMP      r4,#2
00002c  d102              BNE      |L3.52|
;;;70                 {
;;;71                     case TASK_NET_BIT://接收到任务事件标志位                 
;;;72                         IWDG_Feed();//喂狗
00002e  f7fffffe          BL       IWDG_Feed
;;;73                         break; 
000032  e000              B        |L3.54|
                  |L3.52|
;;;74                     
;;;75                     default:
;;;76                         break;
000034  bf00              NOP      
                  |L3.54|
000036  bf00              NOP                            ;73
                  |L3.56|
000038  e7ea              B        |L3.16|
;;;77                 }//end of switch
;;;78                 
;;;79             }//end of if
;;;80         }
;;;81     }
;;;82     
                          ENDP

00003a  0000              DCW      0x0000
                  |L3.60|
                          DCD      rt_tsk_self
                  |L3.64|
                          DCD      HandleTaskStart
                  |L3.68|
                          DCD      rt_evt_wait
                  |L3.72|
                          DCD      rt_evt_get

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;31     */
;;;32     int main(void) 
000000  f7fffffe          BL       bsp_Init
;;;33     {	
;;;34     	/* 初始化外设 */
;;;35     	bsp_Init();
;;;36         
;;;37     	/* 创建启动任务 */
;;;38      	os_sys_init_user(AppTaskStart,             /* 任务函数 */
000004  f7fffffe          BL       os_set_env
000008  4a03              LDR      r2,|L4.24|
00000a  4904              LDR      r1,|L4.28|
00000c  4804              LDR      r0,|L4.32|
00000e  f8dfc014          LDR      r12,|L4.36|
000012  df00              SVC      #0x0
;;;39     	                  4,                        /* 任务优先级 */
;;;40     	                  &AppTaskStartStk,         /* 任务栈 */
;;;41     	                  sizeof(AppTaskStartStk)); /* 任务栈大小，单位字节数 */
;;;42     	while(1);
000014  bf00              NOP      
                  |L4.22|
000016  e7fe              B        |L4.22|
;;;43     }
;;;44     
                          ENDP

                  |L4.24|
                          DCD      AppTaskStartStk
                  |L4.28|
                          DCD      0x00020004
                  |L4.32|
                          DCD      AppTaskStart
                  |L4.36|
                          DCD      rt_sys_init

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  AppTaskStartStk
                          %        512
                  AppTaskNetStk
                          %        512

                          AREA ||.data||, DATA, ALIGN=2

                  HandleTaskStart
                          DCD      0x00000000
                  HandleTaskNet
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_65e498f6____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_65e498f6____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_65e498f6____REVSH|
#line 128
|__asm___6_main_c_65e498f6____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
