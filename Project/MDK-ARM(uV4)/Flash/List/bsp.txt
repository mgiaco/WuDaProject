; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\User\CpuFlash -I..\..\User\CRC8_16 -I..\..\User\DS1302 -I..\..\User\DWT -I..\..\User\IIC -I..\..\User\IWDG -I..\..\User\Key -I..\..\User\Led -I..\..\User\Net -I..\..\User\Protocal -I..\..\User\Reader -I..\..\User\SPI -I..\..\User\Timer -I..\..\User\Uart -I..\..\User\Param -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.GetCPU_ID||, CODE, READONLY, ALIGN=2

                  GetCPU_ID PROC
;;;23     
;;;24     static void GetCPU_ID(uint8_t *data, uint8_t len)  
000000  b51e              PUSH     {r1-r4,lr}
;;;25     {  
000002  460a              MOV      r2,r1
;;;26         u32 CpuID[3];
;;;27         u32 mac_Code; 
;;;28         //u8 ID0,ID1,ID2,ID3;
;;;29         CpuID[0]=*(u32*)(0x1FFFF7E8);  
000004  4b0d              LDR      r3,|L1.60|
000006  681b              LDR      r3,[r3,#0]
000008  9300              STR      r3,[sp,#0]
;;;30         CpuID[1]=*(u32*)(0x1FFFF7EC);  
00000a  4b0c              LDR      r3,|L1.60|
00000c  1d1b              ADDS     r3,r3,#4
00000e  681b              LDR      r3,[r3,#0]
000010  9301              STR      r3,[sp,#4]
;;;31         CpuID[2]=*(u32*)(0x1FFFF7F0);  
000012  4b0a              LDR      r3,|L1.60|
000014  3308              ADDS     r3,r3,#8
000016  681b              LDR      r3,[r3,#0]
000018  9302              STR      r3,[sp,#8]
;;;32         mac_Code = (CpuID[0]>>1)+(CpuID[1]>>2)+(CpuID[2]>>3);
00001a  9b00              LDR      r3,[sp,#0]
00001c  085b              LSRS     r3,r3,#1
00001e  9c01              LDR      r4,[sp,#4]
000020  eb030394          ADD      r3,r3,r4,LSR #2
000024  9c02              LDR      r4,[sp,#8]
000026  eb0301d4          ADD      r1,r3,r4,LSR #3
;;;33         data[0]=mac_Code&0x000000FF;
00002a  7001              STRB     r1,[r0,#0]
;;;34         data[1]=(mac_Code&0x0000FF00)>>8;
00002c  0a0b              LSRS     r3,r1,#8
00002e  7043              STRB     r3,[r0,#1]
;;;35         data[2]=(mac_Code&0x00FF0000)>>16;
000030  0c0b              LSRS     r3,r1,#16
000032  7083              STRB     r3,[r0,#2]
;;;36         data[3]=(mac_Code&0xFF000000)>>24;
000034  0e0b              LSRS     r3,r1,#24
000036  70c3              STRB     r3,[r0,#3]
;;;37     }
000038  bd1e              POP      {r1-r4,pc}
;;;38     
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x1ffff7e8

                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=2

                  bsp_Init PROC
;;;47     */
;;;48     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;49     {
;;;50     	/*
;;;51     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;52     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;53     
;;;54     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;55     	*/
;;;56     	
;;;57     	/* 优先级分组设置为4，可配置0-15级抢占式优先级，0级子优先级，即不存在子优先级。*/
;;;58     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;59     
;;;60         bsp_InitDWT();//用来做精确微秒延时
00000a  f7fffffe          BL       bsp_InitDWT
;;;61         
;;;62     	//bsp_InitUart(); 	/* 初始化串口 */
;;;63     	bsp_InitLed(); 		/* 初始LED指示灯端口 */
00000e  f7fffffe          BL       bsp_InitLed
;;;64     	bsp_InitKey();		/* 初始化按键 */
000012  f7fffffe          BL       bsp_InitKey
;;;65     	bsp_InitHardTimer();    /* 硬件定时器初始化*/   
000016  f7fffffe          BL       bsp_InitHardTimer
;;;66         
;;;67         bsp_InitSPIBus();	/* 配置SPI总线 */		
00001a  f7fffffe          BL       bsp_InitSPIBus
;;;68     	bsp_InitSFlash();	/* 初始化SPI 串行Flash */
00001e  f7fffffe          BL       bsp_InitSFlash
;;;69         
;;;70         bsp_InitI2C();		/* 配置I2C总线 */
000022  f7fffffe          BL       bsp_InitI2C
;;;71         WiegandInit();		//初始化韦根信号线
000026  f7fffffe          BL       WiegandInit
;;;72         
;;;73         ds1302_GPIO_Configuration();//1302模拟时序引脚初始化   
00002a  f7fffffe          BL       ds1302_GPIO_Configuration
;;;74         
;;;75         WIZ_SPI_Init();//初始化w5500用到的GPIO口和spi功能
00002e  f7fffffe          BL       WIZ_SPI_Init
;;;76         Reset_W5500();//硬重启w5500
000032  f7fffffe          BL       Reset_W5500
;;;77         
;;;78         paramInit();//读取参数
000036  f7fffffe          BL       paramInit
;;;79         GetCPU_ID(g_tParam.netCfg.mcuID, 4);//获取cpuID
00003a  2104              MOVS     r1,#4
00003c  4807              LDR      r0,|L2.92|
00003e  f7fffffe          BL       GetCPU_ID
;;;80         set_default(&g_tParam.netCfg);//设置默认的MAC，IP，GW，SUB，DNS,并初始化
000042  4806              LDR      r0,|L2.92|
000044  380c              SUBS     r0,r0,#0xc
000046  f7fffffe          BL       set_default
;;;81         
;;;82         bsp_InitIwdg(0xC35);//看门狗溢出时间为20s
00004a  f6404035          MOV      r0,#0xc35
00004e  f7fffffe          BL       bsp_InitIwdg
;;;83         
;;;84         //状态置0
;;;85         g_tRunInfo.firstCardStatus = 0;
000052  2000              MOVS     r0,#0
000054  4902              LDR      r1,|L2.96|
000056  7088              STRB     r0,[r1,#2]
;;;86         g_tRunInfo.multipleCardStatus = 0;
000058  8088              STRH     r0,[r1,#4]
;;;87     }
00005a  bd10              POP      {r4,pc}
;;;88     
                          ENDP

                  |L2.92|
                          DCD      g_tParam+0x24
                  |L2.96|
                          DCD      g_tRunInfo

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_tRunInfo
                          %        12

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
